// ------------------------------------------
// 3. set-color.scss 에서 지정한 key를 가지고 있는 경우, 그 key 값을 출력한다.
// ------------------------------------------
@function setColor($map, $object, $style) {
  @if map-has-key($map, $object) {
    @return map-get(map-get($map, $object), $style);
  }
  @warn "해당 ´#{$object} 는 변수가 없습니다.";
  @return null;
}

// ------------------------------------------
// 4. $config의 $key 값(light / dark)이 있을 경우, 마지막 인자 값(primary-100 / secondary-100 ...) 을 출력한다.
// ------------------------------------------
@mixin setTheme($key) {
  --neutral-0: #{setColor($config, $key, neutral-0)};
  --neutral-100: #{setColor($config, $key, neutral-100)};
  --neutral-200: #{setColor($config, $key, neutral-200)};
  --neutral-300: #{setColor($config, $key, neutral-300)};
  --neutral-400: #{setColor($config, $key, neutral-400)};
  --neutral-500: #{setColor($config, $key, neutral-500)};
  --neutral-600: #{setColor($config, $key, neutral-600)};
  --neutral-700: #{setColor($config, $key, neutral-700)};
  --neutral-800: #{setColor($config, $key, neutral-800)};
  --neutral-900: #{setColor($config, $key, neutral-900)};

  --primary-100: #{setColor($config, $key, primary-100)};
  --primary-300: #{setColor($config, $key, primary-300)};
  --primary-500: #{setColor($config, $key, primary-500)};
  --primary-700: #{setColor($config, $key, primary-700)};
  --primary-900: #{setColor($config, $key, primary-900)};

  --secondary-100: #{setColor($config, $key, secondary-100)};
  --secondary-300: #{setColor($config, $key, secondary-300)};
  --secondary-500: #{setColor($config, $key, secondary-500)};
  --secondary-700: #{setColor($config, $key, secondary-700)};
  --secondary-900: #{setColor($config, $key, secondary-900)};

  --info-100: #{setColor($config, $key, info-100)};
  --info-300: #{setColor($config, $key, info-300)};
  --info-500: #{setColor($config, $key, info-500)};
  --info-700: #{setColor($config, $key, info-700)};
  --info-900: #{setColor($config, $key, info-900)};

  --success-100: #{setColor($config, $key, success-100)};
  --success-300: #{setColor($config, $key, success-300)};
  --success-500: #{setColor($config, $key, success-500)};
  --success-700: #{setColor($config, $key, success-700)};
  --success-900: #{setColor($config, $key, success-900)};

  --warning-100: #{setColor($config, $key, warning-100)};
  --warning-300: #{setColor($config, $key, warning-300)};
  --warning-500: #{setColor($config, $key, warning-500)};
  --warning-700: #{setColor($config, $key, warning-700)};
  --warning-900: #{setColor($config, $key, warning-900)};

  --error-100: #{setColor($config, $key, error-100)};
  --error-300: #{setColor($config, $key, error-300)};
  --error-500: #{setColor($config, $key, error-500)};
  --error-700: #{setColor($config, $key, error-700)};
  --error-900: #{setColor($config, $key, error-900)};
}

// ------------------------------------------
// 5. light / dark 테마가 $theme으로(= $key) 들어가서 theme 믹스인을 실행한다.
// ------------------------------------------
@each $theme in default, dark {
  .wrap.theme-#{$theme} {
    @include setTheme($theme);
  }
}
