// ------------------------------------------
// 3. set-color.scss 에서 지정한 key를 가지고 있는 경우, 그 key 값을 출력한다.
// ------------------------------------------
@function setColor($map, $object, $style) {
  @if map-has-key($map, $object) {
    @return map-get(map-get($map, $object), $style);
  }
  @warn "The key ´#{$object} is not available in the map.";
  @return null;
}

// ------------------------------------------
// 4. $config의 $key 값(default / dark)이 있을 경우, 마지막 인자 값(primary / secondary ...) 을 출력한다.
// ------------------------------------------
@mixin setTheme($key) {
  --primary-color: #{setColor($config, $key, primary)};
  --secondary-color: #{setColor($config, $key, secondary)};
  --negative-color: #{setColor($config, $key, negative)};
  --hover-primary-color: #{setColor($config, $key, hover-primary)};
  --hover-secondary-color: #{setColor($config, $key, hover-secondary)};
  --hover-negative-color: #{setColor($config, $key, hover-negative)};
  --active-primary-color: #{setColor($config, $key, active-primary)};
  --active-secondary-color: #{setColor($config, $key, active-secondary)};
  --active-negative-color: #{setColor($config, $key, active-negative)};
}

// ------------------------------------------
// 5. default, dark이 $theme으로(= $key) 들어가서 theme 믹스인을 실행한다.
// ------------------------------------------
@each $theme in default, dark {
  .wrap.theme-#{$theme} {
    @include setTheme($theme);
  }
}
